<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnImgRemover.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>